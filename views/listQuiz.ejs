<% include ./layout/header %>
<% include ./modal/addNewQuestion %>
<% include ./modal/editQuestion %>
<div class="container ListQuiz">
    <div class="row justify-content-between align-items-center">
        <div class="row Subject flex-column">
            <div class="SubjectTile">
                <strong>Môn học:</strong> <%= subject.name %></strong>
                <input type="hidden" id="subjectId" data-slug="<%=subject.slug %>" value="<%=subject.id %>">
            </div>
            <div class="SubjectInfo">
                <ul class="list">
                    <li data-level='A'>
                        <a href="#">Tổng: <%=numQuestion.num %> câu</a>
                    </li>
                    <li data-level='D'>
                        <a href="#" class="text-success">Câu dễ: <%=numQuestion.numE %> câu</a>
                    </li>
                    <li data-level='V'>
                        <a href="#" class="text-warning">Câu trung bình: <%=numQuestion.numM %> câu</a>
                    </li>
                    <li data-level='K'>
                        <a href="#" class="text-danger">Câu khó: <%=numQuestion.numH %> câu</a>
                    </li>
                </ul>
            </div>
        </div>
        <div>
            <a href="#" class="btn btn-sm btn-dark"> Chỉnh sửa</a>
            <a href="#" class="btn btn-sm btn-success ml-2" id="btnAddNewQuestion"> Thêm câu hỏi</a>
        </div>
    </div>
    <div class="row mt-2">
        <div class="form-group d-flex align-items-center w-100">
            <input type="text" class="form-control" placeholder="Tìm kiếm" id="searchBox">
        </div>
    </div>
    <div class="ListQuiz__content">
        <ul class="list-group list-group-flush">
            <% if(questions.length > 0) { %>
            <%  questions.forEach(function(quiz, i) { %>
                <li class="list-group-item quiz">
                    <div class="QuizItem">
                        <div class="quiz__content">
                            <% let classLevel = {
                                    D: 'badge-success',
                                    V: 'badge-warning',
                                    K: 'badge-danger',
                                }
                                let nameLevel = {
                                    D: 'Dễ',
                                    V: 'Vừa',
                                    K: 'Khó',
                                }
                            %>
                            
                            <h6 class="font-weight-bold">
                                Câu <%=i + 1 + limit*(page-1)%>. <span class="badge <%=classLevel[quiz.level] %>"><%=nameLevel[quiz.level] %></span> <%=quiz.content %>
                            </h6>
                            <ul>
                                <li
                                    <% if(quiz.answers[0].isTrue) {%>
                                        class="text-danger"
                                    <% }%>
                                >
                                    A. <%=quiz.answers[0].content%>
                                </li>
                                <li
                                    <% if(quiz.answers[1].isTrue) {%>
                                        class="text-danger"
                                    <% }%>
                                >
                                    B. <%=quiz.answers[1].content%>
                                </li>
                                <li
                                    <% if(quiz.answers[2].isTrue) {%>
                                        class="text-danger"
                                    <% }%>
                                >
                                    C. <%=quiz.answers[2].content%>
                                </li>
                                <li
                                    <% if(quiz.answers[3].isTrue) {%>
                                        class="text-danger"
                                    <% }%>
                                >
                                    D. <%=quiz.answers[3].content%>
                                </li>
                            </ul>
                        </div>
                        <div class="quiz__option">
                            <a href="#" class="btn btn-sm btnEditQuestion" data-question="<%=JSON.stringify(quiz) %>"> Chỉnh sửa</a>
                            <a href="#" class="btn btn-sm btn-danger btnRemoveQuestion" data-id="<%=quiz.id %>"> Xóa</a>
                        </div>
                    </div>
                </li>
            <% });
            } else {%>
                <p class="alert alert-danger">Không có câu hỏi nào.</p>
            <%}%>
            
    </div>
    <div class="d-flex align-items-center flex-column">
        <nav aria-label="...">
            <ul class="pagination">
              <li class="<% if(page === 1) {%> disabled <%}%> page-item">
                <a class="page-link" href="#" tabindex="-1" data-index="-1">Quay lại</a>
              </li>
              <% for(let i = 1; i < Math.ceil(totalQuestion/limit) + 1; i++) {
                    if(i === page) {
              %>
                <li class="page-item active">
                    <a class="page-link" data-index="<%=i %>" href="#"><%=i %> <span class="sr-only">(current)</span></a>
                </li>
              <%}else{%>
                <li class="page-item"><a class="page-link" data-index="<%=i %>" href="#"><%=i %></a></li>
              <%}}%>
              <li class="<% if(Math.ceil(totalQuestion/limit) === page) {%> disabled<%}%> page-item">
                <a class="page-link" href="#" data-index="+1">Tiếp theo</a>
              </li>
            </ul>
        </nav>
    </div>
</div>
<script>
    $(document).ready(function(){
        let search = document.location.search;
        let indexLevel = search.indexOf('level=');
        if(indexLevel !== -1) {
            let level = search.slice(indexLevel + 6, indexLevel + 7);
            let listLv = $('.SubjectInfo .list li');
            for(let ele of listLv){
                if($(ele).attr('data-level') === level){
                    $(ele).css('background-color', '#faaeaea3');
                } else {
                    $(ele).css('background-color', '');
                }
            }

        }
        let indexFilter = search.indexOf('search=');
        if(indexFilter !== -1){
            $('#searchBox').val(decodeURIComponent(search.slice(indexFilter + 7)));
        }
    })

    $('input[name="indexResult"]').on('change', function(){
        $('input[name="indexResult"]').prop('checked', false);
        $(this).prop('checked', true);
    })

    $('#btnAddNewQuestion').click(function(){
        $('#FormNewQuestion').trigger('reset');
        $('#modalAddNewQuestion').modal('show');
    })

    $('#btnSaveNewQuestion').click(function(){
        const subjectSlug = $('#subjectId').attr('data-slug');
        const url = `/subjects/${subjectSlug}/create`;
        const data = $('#FormNewQuestion').serializeArray();
        let dataObj = handleSerializeArrayToObj(data);
        dataObj.subjectId = $('#subjectId').val();
        dataObj.subjectSlug = subjectSlug;
        const options = {   
            method: 'POST',
            url: url,
            data: dataObj,
            success: function(res){
                setTimeout(function(){
                    document.location.reload();
                }, 2000);
                $('#modalAddNewQuestion').modal('hide');
                alert('Tạo câu hỏi mới thành công!')
            },
            error: function(err){
                console.log(err.message);
            }
        };
        $.ajax(options);
    })

    $('.page-link').on('click', function(){
        const path = document.location.path;
        const limitIndex = document.location.search.indexOf('&limit=');
        let pageCurrent, limit;
        if(limitIndex !== -1){
            limit = document.location.search.slice(limitIndex + 7);
            pageCurrent = document.location.search.slice(6, limitIndex);
        } else {
            pageCurrent = 1;
            limit = 10;
        }
        let page = $(this).attr('data-index');
        page = page  === '-1' ? +pageCurrent - 1 : page;
        page = page  === '+1' ? +pageCurrent + 1 : page;
        const search = `?page=${page}&limit=${limit}`;
        document.location.href = document.location.pathname + search;
    })

    $('.btnEditQuestion').on('click', function(){
        const dataQ = JSON.parse($(this).attr('data-question'));
        const formEditQ = $('#FormEditQuestion');
        formEditQ.trigger('reset');
        formEditQ.find('[name="level"]').val(dataQ.level);
        formEditQ.find('[name="content"]').text(dataQ.content);
        const eleAns = formEditQ.find('[name="answers"]');
        const eleChk = formEditQ.find('[name="indexResult"]');
        formEditQ.find('[name="id"]').val(dataQ.id);
        for(let i = 0; i < eleAns.length; i++){
            console.log(dataQ.answers[i])
            $(eleAns[i]).val(dataQ.answers[i].content);
            if(dataQ.answers[i].isTrue){
                $(eleChk[i]).prop('checked', 'checked');
            }
        }
        $('#modalEditQuestion').modal('show');
    })

    $('#btnUpdateNewQuestion').click(function(){
        const subjectSlug = $('#subjectId').attr('data-slug');
        const url = `/subjects/${subjectSlug}/update`;
        const data = $('#FormEditQuestion').serializeArray();
        let dataObj = handleSerializeArrayToObj(data);
        const options = {   
            method: 'POST',
            url: url,
            data: dataObj,
            success: function(res){
                setTimeout(function(){
                    document.location.reload();
                }, 2000);
                $('#modalAddNewQuestion').modal('hide');
                alert('Chỉnh sửa câu hỏi thành công!')
            },
            error: function(err){
                console.log(err.message);
            }
        };
        $.ajax(options);
    })


    function destroyQuestion(id){
        const subjectSlug = $('#subjectId').attr('data-slug');
        const url = `/subjects/${subjectSlug}/destroy`;
        const options = {   
            method: 'POST',
            url: url,
            data: {
                id: id
            },
            success: function(res){
                setTimeout(function(){
                    document.location.reload();
                }, 2000);
                $('#modalConfirmDestroy').modal('hide');
                alert('Xóa câu hỏi thành công!')
            },
            error: function(err){
                console.log(err.message);
            }
        };
        return $.ajax(options);
    }

    $('.btnRemoveQuestion').on('click', function(){
        $('#modalConfirmDestroy').modal('show');
        const idQuestion = $(this).attr('data-id');
        $('#modalConfirmDestroy #btnDestroy').off().click(function(){
            destroyQuestion(idQuestion);
        });
    })

    $('.SubjectInfo .list li').on('click', function(){
        const level = $(this).attr('data-level');
        let search = `level=${level}`;
        let href = location.href;
        if(href.includes('level=')){
            href = href.replace(/level=[DVKA]/g, search)
        }else if(href.includes('?')){
            href = href + '&' + search
        }else{
            href = href + '?' + search
        }
        location.replace(href)
        
        // if(document.location.search) {
        //     let indexLevel = document.location.search.indexOf('level');
        //     if(indexLevel !== -1) {
        //         let oldLevelFilter = document.location.search.slice(indexLevel + 6, indexLevel + 7);
        //         search = document.location.search.replace(oldLevelFilter, search);
        //         console.log('aaaa', oldLevelFilter);
        //         console.log('bbbb', search);
        //     } else {
        //         search = '&' + search;
        //         console.log('cccc', search);
        //     }
        // } else {
        //     search = '?' + search;
        // }
        // document.location.href = document.location.pathname + search;
    });

    $('#searchBox').on('change', function(){
        let search = this.value;
        if(document.location.search) {
            let indexLevel = document.location.search.indexOf('level');
            if(indexLevel !== -1) {
                let oldLevelFilter = document.location.search.slice(indexLevel + 6, indexLevel + 7);
                search = '?level=' + oldLevelFilter + '&search=' + search
            } else {
                search = '&search=' + search;
            }
        } else {
            search = '?search=' + search;
        }
        console.log(document.location.pathname + search);
        document.location.href = document.location.pathname + search;
    })
</script>
<% include ./layout/footer %>